trigger:
  - master

pool:
  vmImage: ubuntu-latest

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.6
    displayName: 'Use Python 3.6'

  - script: |
      pip install --upgrade pip pipenv
      pipenv lock --requirements > Functions/requirements.txt
      cd Functions
      python3.6 -m venv worker_venv
      source worker_venv/bin/activate
      pip3.6 install -r requirements.txt
      ls -la
      pwd
    displayName: 'Install dependencies'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: Functions
      includeRootFolder: false
      archiveType: zip
      archiveFile: '$(Build.ArtifactStagingDirectory)/build-$(Build.BuildId).zip'
      replaceExistingArchive: true
      verbose: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/build-$(Build.BuildId).zip'
      artifactName: drop

  - task: AzureCLI@1
    inputs:
      azureSubscription: $(azureSubscription)
      scriptLocation: inlineScript
      inlineScript: |
        test -n "$(AWS_S3_BUCKET)" || (echo "AWS_S3_BUCKET" ; exit 1)
        az group create \
          --name $(resourceGroupName) \
          --location $(location) \
          --verbose
        az group deployment create \
          --resource-group $(resourceGroupName) \
          --template-file $(System.DefaultWorkingDirectory)/Resources.json \
          --parameters \
            AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID) \
            AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY) \
            AWS_S3_BUCKET=$(AWS_S3_BUCKET) \
          --verbose
      workingDirectory: Test

  - task: AzureFunctionApp@1
    inputs:
      azureSubscription: $(azureSubscription)
      appType: functionAppLinux
      appName: $(resourceGroupName)Functions
      deployToSlotOrASE: true
      resourceGroupName: $(resourceGroupName)
      slotName: production
      package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
